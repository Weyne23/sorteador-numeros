@property --angle {
    syntax: "<angle>"; /* controls values that the variable can accept: 'number' + degrees -> 180deg */
    initial-value: 0deg; /* default value to apply */
    inherits: false; /* default setting for custom property */
}

button {
    all: unset;
    align-items: center;
    justify-content: center;
    gap: .5rem;
    width: 100%;
    font-weight: var(--fw-bold);
    border-radius: .5rem;
    padding-block: 1rem;
    text-transform: uppercase;
    background-color: var(--bg-color-tertiary);
    transition: background-color 200ms ease;
    &:hover {
        background-color: var(--bg-color-secondary);
    }
}

#bt-sorted {
    &:hover {
        & img {
            animation: arrowAnimation 1s linear infinite;
        }
    }
}

#bt-sorted-again {
    &:hover {
        & img[src*="circle-arrow"] {
            animation: arrowAnimationRotate 2s linear infinite;
        }
    }
    
    gap: .7rem;
    
    & div{
        position: relative;

        &::after {
           position: absolute;
           content: "";
           background: center/ contain no-repeat url("../assets/icons/player.svg");
           width: .85rem;
           height: .85rem;
           inset: 6px;
       }
    }
    
}

.button-gradient {
    padding: 2px;
    border-radius: 8px;
    background-color: var(--bg-color-tertiary);

    animation: myGradientAnimation 2s linear infinite;

    &:hover {
        background-image: conic-gradient(
            from var(--angle),
            var(--accent-green) 0%,
            var(--accent-lime) 14.84%,
            var(--accent-red) 32.15%,
            var(--accent-pink) 65.79%,
            var(--accent-blue) 84.58%
        );
    }
}

@keyframes myGradientAnimation {
    from {
        --angle: 0deg;
    } to {
        --angle: 360deg;
    }
}

@keyframes arrowAnimation {
    50% {
        transform: translateX(10px);
    }
}

@keyframes arrowAnimationRotate {
    100% {
        rotate: 360deg;
    }
}